{"version":3,"sources":["../src/match.ts"],"names":["matchPositions","trade","positions","legs","_","chain","map","position","overlapping","reduce","acc","leg","found_leg","find","p_leg","symbol","score","length","filter","x","orderBy","value"],"mappings":";;;;;;;AAAA;;;;AAaO,SAASA,cAAT,CACLC,KADK,EAELC,SAFK,EAG4B;AACjC,MAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;AAEA,SAAOC,gBAAEC,KAAF,CAAQH,SAAR,EACJI,GADI,CACCC,QAAD,IAAc;AACjB,QAAIC,WAAW,GAAGJ,gBAAEK,MAAF,CAChBN,IADgB,EAEhB,CAACO,GAAD,EAAMC,GAAN,KAAc;AACZ,UAAIC,SAAS,GAAGR,gBAAES,IAAF,CACdN,QAAQ,CAACJ,IADK,EAEbW,KAAD,IAAWA,KAAK,CAACC,MAAN,KAAiBJ,GAAG,CAACI,MAFlB,CAAhB;;AAIA,UAAIH,SAAJ,EAAe;AACbF,QAAAA,GAAG,IAAI,CAAP;AACD;;AACD,aAAOA,GAAP;AACD,KAXe,EAYhB,CAZgB,CAAlB;;AAeA,WAAO;AACLM,MAAAA,KAAK,EAAER,WAAW,GAAGD,QAAQ,CAACJ,IAAT,CAAcc,MAD9B;AAELT,MAAAA,WAFK;AAGLD,MAAAA;AAHK,KAAP;AAKD,GAtBI,EAuBJW,MAvBI,CAuBIC,CAAD,IAAOA,CAAC,CAACH,KAAF,GAAU,CAvBpB,EAwBJI,OAxBI,CAwBKD,CAAD,IAAOA,CAAC,CAACH,KAxBb,EAwBoB,MAxBpB,EAyBJK,KAzBI,EAAP;AA0BD","sourcesContent":["import _ from 'lodash';\nimport { OptionLeg } from './types';\n\nexport interface HasOptionLegs {\n  legs: OptionLeg[];\n}\n\nexport interface MatchingPositionScore<T> {\n  score: number;\n  overlapping: number;\n  position: T;\n}\n\nexport function matchPositions<T extends HasOptionLegs>(\n  trade: HasOptionLegs,\n  positions: T[]\n): Array<MatchingPositionScore<T>> {\n  let legs = trade.legs;\n\n  return _.chain(positions)\n    .map((position) => {\n      let overlapping = _.reduce(\n        legs,\n        (acc, leg) => {\n          let found_leg = _.find(\n            position.legs,\n            (p_leg) => p_leg.symbol === leg.symbol\n          );\n          if (found_leg) {\n            acc += 1;\n          }\n          return acc;\n        },\n        0\n      );\n\n      return {\n        score: overlapping / position.legs.length,\n        overlapping,\n        position,\n      };\n    })\n    .filter((x) => x.score > 0)\n    .orderBy((x) => x.score, 'desc')\n    .value();\n}\n"],"file":"match.js"}